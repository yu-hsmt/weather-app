{"ast":null,"code":"import { createStore } from 'vuex';\nimport axios from 'axios';\nconst store = createStore({\n  state: {\n    weather: null,\n    //weatherの初期値をnullにする\n    error: null //errorの初期値をnullにする\n  },\n  mutations: {\n    setWeather(state, weather) {\n      //state・weatherを引数として、以下をsetWeatherとする\n      state.weather = weather; //stateのweatherを「weather」とする\n    },\n    setError(state, error) {\n      //state・errorを引数として、以下をsetErrorとする\n      state.error = error; //stateのerrorを「error」とする\n    }\n  },\n  actions: {\n    async fetchWeather({\n      commit\n    }, city) {\n      //cityを引数として、以下をfetchWeatherとする\n      try {\n        const renponse = await axios.get(`https://wttr.in/${city}?format=j1`); //天気APIを取得\n        commit('setWeather', response.data); //APIから返された「data」をsetWeatherにコミット\n        commit('setError', null); //serErrorにnullをコミット\n      } catch (error) {\n        commit('setError', 'City not found or other error occured');\n        commit('setWeather', null);\n      }\n    }\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","axios","store","state","weather","error","mutations","setWeather","setError","actions","fetchWeather","commit","city","renponse","get","response","data"],"sources":["/Users/yu/vue-weather-app_/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\nimport axios from 'axios';\n\nconst store = createStore({\n    state: {\n        weather: null, //weatherの初期値をnullにする\n        error: null //errorの初期値をnullにする\n    },\n    mutations: {\n        setWeather(state, weather) { //state・weatherを引数として、以下をsetWeatherとする\n            state.weather = weather; //stateのweatherを「weather」とする\n        },\n        setError(state, error) { //state・errorを引数として、以下をsetErrorとする\n            state.error = error; //stateのerrorを「error」とする\n        }\n    },\n    actions: {\n        async fetchWeather({ commit }, city) { //cityを引数として、以下をfetchWeatherとする\n            try {\n                const renponse = await axios.get(`https://wttr.in/${city}?format=j1`); //天気APIを取得\n                commit('setWeather', response.data); //APIから返された「data」をsetWeatherにコミット\n                commit('setError', null); //serErrorにnullをコミット\n            } catch (error) {\n                commit('setError', 'City not found or other error occured');\n                commit('setWeather', null);\n            }\n        }\n    }\n});\n\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,KAAK,GAAGF,WAAW,CAAC;EACtBG,KAAK,EAAE;IACHC,OAAO,EAAE,IAAI;IAAE;IACfC,KAAK,EAAE,IAAI,CAAC;EAChB,CAAC;EACDC,SAAS,EAAE;IACPC,UAAUA,CAACJ,KAAK,EAAEC,OAAO,EAAE;MAAE;MACzBD,KAAK,CAACC,OAAO,GAAGA,OAAO,CAAC,CAAC;IAC7B,CAAC;IACDI,QAAQA,CAACL,KAAK,EAAEE,KAAK,EAAE;MAAE;MACrBF,KAAK,CAACE,KAAK,GAAGA,KAAK,CAAC,CAAC;IACzB;EACJ,CAAC;EACDI,OAAO,EAAE;IACL,MAAMC,YAAYA,CAAC;MAAEC;IAAO,CAAC,EAAEC,IAAI,EAAE;MAAE;MACnC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,mBAAmBF,IAAI,YAAY,CAAC,CAAC,CAAC;QACvED,MAAM,CAAC,YAAY,EAAEI,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;QACrCL,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAON,KAAK,EAAE;QACZM,MAAM,CAAC,UAAU,EAAE,uCAAuC,CAAC;QAC3DA,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC;MAC9B;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,eAAeT,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}